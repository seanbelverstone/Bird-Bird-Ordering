{"version":3,"sources":["images/dozenbiscuitsflip.jpg","components/OrderForm.js","components/UserCalendar.js","components/CheckoutForm.js","components/UserForm.js","components/PaymentModal.js","pages/Home.js","pages/Login.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fifteenPercentTip","eighteenPercentTip","twentyPercentTip","subtotal","UserCalendar","state","startDate","Date","handleChange","date","_this","setState","react_default","a","createElement","react_datepicker_min_default","id","selected","this","onChange","minDate","subDays","showTimeSelect","timeFormat","timeIntervals","timeCaption","minTime","setHours","setMinutes","maxTime","React","Component","CheckoutForm","props","stripe","useStripe","elements","useElements","handleSubmit","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","event","result","wrap","_context","prev","next","preventDefault","createPaymentMethod","type","card","getElement","CardElement","billing_details","name","sent","handlePaymentMethodResult","stop","_x","apply","arguments","_ref2","_callee2","response","serverResponse","_context2","error","fetch","method","headers","Content-Type","body","JSON","stringify","payment_method_id","paymentMethod","json","handleServerResponse","_x2","onSubmit","react_stripe_umd","disabled","UserForm","lib","label","validate","required","value","errorMessage","pattern","minLength","maxLength","tel","email","match","components_CheckoutForm","total","Button","color","PaymentModal","buttonLabel","className","_useState","useState","_useState2","slicedToArray","modal","setModal","toggle","isNaN","tipValidation","onClick","Modal","isOpen","ModalHeader","ModalBody","components_UserForm","toggleClose","ModalFooter","totalPrice","OrderForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_event$target","target","defineProperty","handleTotals","parseInt","quantity","toFixed","addTip","buttonTip","tipInDollars","console","log","handleForm","hidden","showForm","hideForm","hiddenForm","display","handleSubtotal","parseFloat","selectedOption","selectedIcon","values","validated","bind","assertThisInitialized","changeIcon","length","Row","form","Col","FormGroup","style","width","Label","for","Input","check","checked","sm","min","step","components_UserCalendar","components_PaymentModal","Home","show","src","biscuits","alt","components_OrderForm","Login","App","stripePromise","loadStripe","process","REACT_APP_STRIPE_KEY","react_router_dom","react_router","exact","path","pages_Home","pages_Login","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","concat","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c2bc3f33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dozenbiscuitsflip.8403d307.jpg\";","import React from 'react';\r\nimport { FormGroup, Label, Input, Row, Col } from 'reactstrap';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport UserCalendar from \"./UserCalendar\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport \"../pages/css/home.css\";\r\n\r\n\r\nvar totalPrice = 30;\r\nvar fifteenPercentTip;\r\nvar eighteenPercentTip;\r\nvar twentyPercentTip;\r\nvar subtotal;\r\n\r\nclass OrderForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tquantity: 1,\r\n\t\t\thiddenForm: {display: \"none\"},\r\n\t\t\thidden: true,\r\n\t\t\tselectedOption: \"dollars\",\r\n\t\t\tselectedIcon: \"$\",\r\n\t\t\ttipInDollars: \"\",\r\n\t\t\tbuttonTip: \"\",\r\n\t\t\tvalues: [],\r\n\t\t\tvalidated: true,\r\n\t\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.addTip = this.addTip.bind(this);\r\n\t\tthis.changeIcon = this.changeIcon.bind(this);\r\n\t}\r\n\t\r\n\t// A function for when the quantity changes\r\n\thandleChange = (event) => {\r\n\t\tconst {name, value} = event.target;\r\n\t\tthis.setState(\r\n\t\t  {[name]: value}\r\n\t\t)\r\n\t};\r\n\r\n\thandleTotals = () => {\r\n\t\ttotalPrice = parseInt(this.state.quantity)*30;\r\n\r\n\t\t// The code below works out the percentage of tip into actual dollars, rounded to 2 decimal places.\r\n\t\tfifteenPercentTip = (totalPrice * 0.15).toFixed(2);\r\n\t\teighteenPercentTip = (totalPrice * 0.18).toFixed(2);\r\n\t\ttwentyPercentTip = (totalPrice * 0.2).toFixed(2);\r\n\t};\r\n\r\n\taddTip = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tswitch (event.target.value) {\r\n\t\t\t// This switch case sets the tip amount to reflect the button pressed, and clears the\r\n\t\t\t// custom amount to prevent double tipping\r\n\r\n\t\t\tcase \"0.15\":\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tbuttonTip: \"0.15\",\r\n\t\t\t\t\ttipInDollars: fifteenPercentTip,\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"0.18\":\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tbuttonTip: \"0.18\",\r\n\t\t\t\t\ttipInDollars: eighteenPercentTip,\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"0.2\":\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tbuttonTip: \"0.2\",\r\n\t\t\t\t\ttipInDollars: twentyPercentTip,\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tconsole.log(\"no tip selected\");\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// This waits until a user selects the Custom Amount button. If they do, it reveals a hidden section\r\n\t// of the form where they can choose to enter an amount using $ or %\r\n\thandleForm = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tif (this.state.hidden) {\r\n\t\t\tthis.showForm()\r\n\t\t} else {\r\n\t\t\tthis.hideForm()\r\n\t\t}\r\n\t}\r\n\r\n\tshowForm = () => {\r\n\t\tthis.setState({\r\n\t\t\t\thiddenForm: {display: \"block\"},\r\n\t\t\t\thidden: false\r\n\t\t\t})\r\n\t}\r\n\r\n\thideForm = () => {\r\n\t\tthis.setState({\r\n\t\t\thiddenForm: {display: \"none\"},\r\n\t\t\thidden: true\r\n\t\t})\r\n\t}\r\n\t\r\n\tchangeIcon(event) {\r\n\t\tthis.setState({\r\n\t\t\tselectedOption: event.target.value\r\n\t\t});\r\n\t// Not sure if this is necessary yet. Commenting out for further changes. Icon is changing after opposite selection\r\n\t// \tif (this.state.selectedOption === \"dollars\") {\r\n\t// \t\tthis.setState({\r\n\t// \t\t\tselectedIcon: \"$\"\r\n\t// \t\t});\r\n\t// \t} else {\r\n\t// \t\tthis.setState({\r\n\t// \t\t\tselectedIcon: \"%\"\r\n\t// \t\t})\r\n\t// \t} \r\n\t}\r\n\r\n\thandleSubtotal = () => {\r\n\t\tsubtotal = (totalPrice + parseFloat(this.state.tipInDollars)).toFixed(2)\r\n\t\tif (isNaN(subtotal)) {\r\n\t\t\tsubtotal = totalPrice;\r\n\t\t} \t\t\t\r\n\t\treturn subtotal;\r\n\r\n\t}\r\n\r\n\thandleSubmit(event, values) {\r\n\t\t// event.preventDefault();\r\n\t\tthis.setState({values});\r\n\r\n\t\tconsole.log(values)\r\n\t\tif (this.state.values.length > 0) {\r\n\t\t\tconsole.log(\"errors\")\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalidated: false\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"please continue\");\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalidated: true\r\n\t\t\t});\t\t\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<AvForm onSubmit={this.handleSubmit} id=\"orderForm\">\r\n\t\t\t\t<Row form>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<FormGroup style={{width: \"150px\"}}>\r\n\t\t\t\t\t\t\t<Label for=\"quantity\">Quantity</Label>\r\n\t\t\t\t\t\t\t<Input \r\n\t\t\t\t\t\t\t\ttype=\"select\" \r\n\t\t\t\t\t\t\t\tname=\"quantity\" \r\n\t\t\t\t\t\t\t\tid=\"quantity\" \r\n\t\t\t\t\t\t\t\tvalue={this.state.quantity}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\tonClick={this.handleTotals()}>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"1\">1 dozen</option>\r\n\t\t\t\t\t\t\t\t<option value=\"2\">2 dozens</option>\r\n\t\t\t\t\t\t\t\t<option value=\"3\">3 dozens</option>\r\n\t\t\t\t\t\t\t\t<option value=\"4\">4 dozens</option>\r\n\r\n\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Label for=\"price\">Price</Label>\r\n\t\t\t\t\t\t<div id=\"price\" name=\"price\">$30.00</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Label for=\"totalPrice\">Total</Label>\r\n\t\t\t\t\t\t<div id=\"totalPrice\" name=\"totalPrice\">${totalPrice}</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<div>Add a tip</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<button onClick={this.addTip} value={0.15}>\r\n\t\t\t\t\t\t\t15%\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t${fifteenPercentTip}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={this.addTip} value={0.18}>\r\n\t\t\t\t\t\t\t18%\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t${eighteenPercentTip}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={this.addTip} value={0.20}>\r\n\t\t\t\t\t\t\t20%\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t${twentyPercentTip}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={this.handleForm}>Custom Amount</button>\r\n\r\n\t\t\t\t\t\t<div id=\"hiddenForm\" style={this.state.hiddenForm}>\r\n\t\t\t\t\t\t\t<FormGroup check>\r\n\t\t\t\t\t\t\t\t<Label check>\r\n\t\t\t\t\t\t\t\t<Input \r\n\t\t\t\t\t\t\t\t\ttype=\"radio\" \r\n\t\t\t\t\t\t\t\t\tname=\"radio2\" \r\n\t\t\t\t\t\t\t\t\tvalue=\"dollars\" \r\n\t\t\t\t\t\t\t\t\tonChange={this.changeIcon}\r\n\t\t\t\t\t\t\t\t\tchecked={this.state.selectedOption === \"dollars\"}/>{' '}\r\n\t\t\t\t\t\t\t\t$\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t<FormGroup check>\r\n\t\t\t\t\t\t\t\t<Label check>\r\n\t\t\t\t\t\t\t\t<Input \r\n\t\t\t\t\t\t\t\t\ttype=\"radio\" \r\n\t\t\t\t\t\t\t\t\tname=\"radio2\" \r\n\t\t\t\t\t\t\t\t\tvalue=\"percentage\" \r\n\t\t\t\t\t\t\t\t\tonChange={this.changeIcon}\r\n\t\t\t\t\t\t\t\t\tchecked={this.state.selectedOption === \"percentage\"}/>{' '}\r\n\t\t\t\t\t\t\t\t%\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<Label for=\"tipInDollars\" sm={2}>Enter your custom amount below</Label>\r\n\t\t\t\t\t\t\t\t{/* <p>{this.state.selectedIcon}</p> */}\r\n\t\t\t\t\t\t\t\t\t<AvField \r\n\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\tname=\"tipInDollars\" \r\n\t\t\t\t\t\t\t\t\tid=\"tipInDollars\"\r\n\t\t\t\t\t\t\t\t\tmin=\"0.01\"\r\n\t\t\t\t\t\t\t\t\tstep=\"0.01\"\r\n\t\t\t\t\t\t\t\t\tvalidate={{pattern: {value: /^\\$?[0-9]+\\.?[0-9]?[0-9]?$/}}}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.tipInDollars}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<div>Select a pick-up date & time</div>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<UserCalendar/>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label for=\"specialInstructions\">Would you like to include any special instructions?</Label>\r\n\t\t\t\t\t<Input type=\"textarea\" name=\"text\" id=\"specialInstructions\" />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<PaymentModal \r\n\t\t\t\t\t\t\t\ttipValidation={this.state.tipInDollars}\r\n\t\t\t\t\t\t\t\ttotal={subtotal}\r\n\t\t\t\t\t\t\t\tvalues={this.state.values}\r\n\t\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}/>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<div id=\"subtotal\">Subtotal: ${this.handleSubtotal()}</div>\r\n\t\t\t\t</Row>\r\n\r\n\r\n\r\n\t\t\t</AvForm>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default OrderForm;","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport subDays from \"date-fns/subDays\";\r\nimport setHours from \"date-fns/setHours\";\r\nimport setMinutes from \"date-fns/setMinutes\";\r\n\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../pages/css/home.css\";\r\n \r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n \r\nclass UserCalendar extends React.Component {\r\n\tstate = {\r\n\t\tstartDate: new Date()\r\n\t  };\r\n\t \r\n\t  handleChange = date => {\r\n\t\tthis.setState({\r\n\t\t  startDate: date\r\n\t\t});\r\n\t  };\r\n\t \r\n\t  render() {\r\n\t\treturn (\r\n\t\t  <DatePicker\r\n\t\t\tid=\"datePicker\"\r\n\t\t\tselected={this.state.startDate}\r\n\t\t\tonChange={this.handleChange}\r\n\t\t\t// min date makes sure users can't select a date sooner than 2 days from the current day\r\n\t\t\tminDate={subDays(new Date(), -2)}\r\n\t\t\tshowTimeSelect\r\n\t\t\ttimeFormat=\"HH:mm\"\r\n\t\t\ttimeIntervals={15}\r\n\t\t\ttimeCaption=\"Time\"\r\n\t\t\t// the min/max time reflect Bird Bird Biscuit's weekday opening hours\r\n\t\t\tminTime={setHours(setMinutes(new Date(), 0), 7)}\r\n\t\t\tmaxTime={setHours(setMinutes(new Date(), 0), 14)}\r\n\t\t\t/>\r\n\t\t);\r\n\t  }\r\n\t}\r\n\r\nexport default UserCalendar;","import React from 'react';\r\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\r\n\r\nconst CheckoutForm = (props) => {\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n\r\n    const result = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n      billing_details: {\r\n        // Include any additional collected billing details.\r\n        name: 'Jenny Rosen',\r\n      },\r\n    });\r\n\r\n    handlePaymentMethodResult(result);\r\n  };\r\n\r\n  const handlePaymentMethodResult = async (result) => {\r\n    if (result.error) {\r\n      // An error happened when collecting card details,\r\n      // show `result.error.message` in the payment form.\r\n    } else {\r\n      // Otherwise send paymentMethod.id to your server (see Step 3)\r\n      const response = await fetch('/pay', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          payment_method_id: result.paymentMethod.id,\r\n        }),\r\n      });\r\n\r\n      const serverResponse = await response.json();\r\n\r\n      handleServerResponse(serverResponse);\r\n    }\r\n  };\r\n\r\n  const handleServerResponse = (serverResponse) => {\r\n    if (serverResponse.error) {\r\n      // An error happened when charging the card,\r\n      // show the error in the payment form.\r\n    } else {\r\n      // Show a success message\r\n    }\r\n  };\r\n\r\n  const handleCardChange = (event) => {\r\n    if (event.error) {\r\n      // Show `event.error.message` in the payment form.\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement onChange={handleCardChange} />\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Submit Payment\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;","import React from 'react';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { Button } from 'reactstrap';\r\nimport CheckoutForm from \"./CheckoutForm\";\r\n\r\nconst UserForm = (props) => {\r\n\r\n    return (\r\n      <AvForm onSubmit={props.handleSubmit}>\r\n        <AvField name=\"nameCustomMessage\" label=\"Name\" type=\"text\" validate={{\r\n            required: {value: true, errorMessage: 'Please enter a name'},\r\n            pattern: {value: /^[a-zA-Z ]+$/, errorMessage: 'Your name must be composed only with letter and numbers'},\r\n            minLength: {value: 4, errorMessage: 'Your name must be between 4 and 32 characters'},\r\n            maxLength: {value: 32, errorMessage: 'Your name must be between 4 and 32 characters'}\r\n          }} />\r\n\r\n        <AvField name=\"telephoneProp\" label=\"Phone\" type=\"text\" validate={{\r\n          tel: true,\r\n          required: {value: true, errorMessage: 'Please enter a phone number'}}} />\r\n\r\n        <AvField name=\"email\" label=\"Email\" type=\"text\" validate={{\r\n          email: true,\r\n          required: {value: true, errorMessage: 'Please enter an email address.'}}} />\r\n\r\n\t\t    <AvField name=\"confirmationEmail\" label=\"Confirm email\" type=\"email\" validate={{\r\n          match:{value:'email', errorMessage: 'Email does not match'},\r\n          required: {value: true, errorMessage: 'Please re-enter your email.'}}} />\r\n\r\n        <CheckoutForm total={props.total}/>\r\n\r\n\t\t    <Button color=\"primary\">Submit</Button>\r\n      </AvForm>\r\n    );\r\n  }\r\n\r\nexport default UserForm;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport UserForm from \"./UserForm\";\r\n\r\nconst PaymentModal = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    // Extra validation to check if there is an error with the custom tip box.\r\n    if (!isNaN(props.tipValidation) || props.handleSubmit) {\r\n      setModal(!modal);\r\n    } else {\r\n      setModal(modal)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"submit\" onClick={toggle}>{buttonLabel}NEXT</Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Contact & Payment</ModalHeader>\r\n        <ModalBody>\r\n          Your subtotal is ${props.total}\r\n\r\n          <UserForm handleSubmit={props.handleSubmit}\r\n                    toggleClose={toggle}\r\n                    total={props.total}/>\r\n          \r\n          <br />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;","import React, { Component } from \"react\";\r\nimport OrderForm from \"../components/OrderForm\";\r\nimport biscuits from \"../images/dozenbiscuitsflip.jpg\";\r\nimport \"./css/home.css\";\r\n\r\n\r\nclass Home extends Component {\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<button id=\"employeeButton\" onClick={this.show}>Employee Login</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<h1 id=\"pageTitle\">BISCUITS BY THE DOZEN</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<img id=\"biscuits\" src={biscuits} alt=\"a dozen biscuits\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<OrderForm />\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\nclass Login extends Component {\r\n\t\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>This is the login page</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Home from \"../src/pages/Home\";\r\nimport Login from \"../src/pages/Login\";\r\n\r\n\r\nconst App = () => {\r\n\r\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n\r\n  return (\r\n      <Elements stripe={stripePromise}>\r\n        <Router>\r\n          <div>\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                  <Login />\r\n                </Route>\r\n              </Switch>\r\n          </div>\r\n        </Router>  \r\n      </Elements>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}